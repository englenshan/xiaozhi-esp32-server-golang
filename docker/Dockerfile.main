# 使用官方 Ubuntu 镜像作为基础镜像
FROM docker.jsdelivr.fyi/golang:1.23

# 设置非交互式安装环境变量
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y libopus-dev libopusfile-dev pkg-config

RUN apt-get install -y openssh-server

RUN apt-get install -y git tree || true
RUN apt-get install -y net-tools telnet netcat || true
RUN apt-get install -y unzip vim iptables iputils-ping || true

COPY docker/lib/onnxruntime-linux-x64-1.21.0.tgz /tmp/

RUN cd /tmp && \
    tar -xzf onnxruntime-linux-x64-1.21.0.tgz && \
    mkdir -p /usr/local/include/onnxruntime && \
    cp -r onnxruntime-linux-x64-1.21.0/include/* /usr/local/include/onnxruntime/ && \
    cp -r onnxruntime-linux-x64-1.21.0/lib/* /usr/local/lib/ && \
    rm -rf onnxruntime-linux-x64-1.21.0* && \
    ldconfig

ENV ONNXRUNTIME_DIR=/usr/local
ENV CGO_CFLAGS="-I${ONNXRUNTIME_DIR}/include/onnxruntime" 
ENV CGO_LDFLAGS="-L${ONNXRUNTIME_DIR}/lib -lonnxruntime"

ENV GOPROXY=https://goproxy.cn,direct
ENV CGO_ENABLED=1

# 添加环境变量到.bashrc和.profile确保所有shell都能访问
RUN echo 'export PATH=$PATH:/usr/local/go/bin' >> /root/.bashrc && \
    echo 'export GOPATH=/go' >> /root/.bashrc && \
    echo 'export GOROOT=/usr/local/go' >> /root/.bashrc && \
    echo 'export GOPROXY=https://goproxy.cn,direct' >> /root/.bashrc && \
    echo 'export CGO_ENABLED=1' >> /root/.bashrc && \
    echo 'export ONNXRUNTIME_DIR=/usr/local' >> /root/.bashrc && \
    echo 'export CGO_CFLAGS="-I${ONNXRUNTIME_DIR}/include/onnxruntime"' >> /root/.bashrc && \
    echo 'export CGO_LDFLAGS="-L${ONNXRUNTIME_DIR}/lib -lonnxruntime"' >> /root/.bashrc && \
    echo 'export PATH=$PATH:/usr/local/go/bin' >> /etc/profile && \
    echo 'export GOPATH=/go' >> /etc/profile && \
    echo 'export GOROOT=/usr/local/go' >> /etc/profile && \
    echo 'export GOPROXY=https://goproxy.cn,direct' >> /etc/profile && \
    echo 'export CGO_ENABLED=1' >> /etc/profile && \
    echo 'export ONNXRUNTIME_DIR=/usr/local' >> /etc/profile && \
    echo 'export CGO_CFLAGS="-I${ONNXRUNTIME_DIR}/include/onnxruntime"' >> /etc/profile && \
    echo 'export CGO_LDFLAGS="-L${ONNXRUNTIME_DIR}/lib -lonnxruntime"' >> /etc/profile

# 创建Go目录结构
RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" "$GOPATH/pkg" && chmod -R 777 "$GOPATH"

# 验证Go安装
RUN /usr/local/go/bin/go version || echo "Go未安装成功，请检查日志"

# 创建工作目录
RUN mkdir -p /workspace
WORKDIR /workspace

# 复制源代码
COPY . .

# 构建主程序
RUN go build -o /workspace/xiaozhi_server ./cmd/server/

# 创建启动脚本
RUN echo '#!/bin/bash' > /start.sh && \
    echo 'cd /workspace' >> /start.sh && \
    echo './xiaozhi_server -c config/config.yaml' >> /start.sh && \
    chmod +x /start.sh

# 开放应用端口
EXPOSE 8080

# 启动主程序
CMD ["/start.sh"]
