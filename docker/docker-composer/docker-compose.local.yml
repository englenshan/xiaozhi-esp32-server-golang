version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: xiaozhi-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: xiaozhi_admin
    ports:
      - "23306:3306"        #可以不进行映射
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --skip-ssl
    networks:
      - xiaozhi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s

  # 主程序服务（本地构建版本）
  main-server:
    build:
      context: ../..
      dockerfile: docker/Dockerfile.main
      args:
        TARGETARCH: ${TARGETARCH:-amd64}
    container_name: xiaozhi-main-server
    command: ["/workspace/bin/xiaozhi_server", "-c", "/workspace/config/config.personal.yaml"]
    ports:
      - "8989:8989"        # websocket服务 端口 18989端口
      - "2883:2883"        # mqtt server 12883
      - "8888:8888/udp"     # udp server 8888
    depends_on:
      mysql:
        condition: service_healthy
      backend:
        condition: service_started
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=xiaozhi_admin
      - BACKEND_URL=http://backend:8080
    volumes:
      - ../../config:/workspace/config
      - ../../logs:/workspace/logs
    networks:
      - xiaozhi-network
    restart: unless-stopped

  # 后端管理服务（本地构建版本）
  backend:
    build:
      context: ../../manager/backend
      dockerfile: Dockerfile
    container_name: xiaozhi-backend
    ports:
      - "8081:8080"        # 后端管理服务 端口 映射至宿主机 28080
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=xiaozhi_admin
    volumes:
      - ../../manager/backend/config:/root/config
    networks:
      - xiaozhi-network
    restart: unless-stopped

  # 前端管理服务（本地构建版本）
  frontend:
    build:
      context: ../../manager/frontend
      dockerfile: Dockerfile
    container_name: xiaozhi-frontend
    ports:
      - "8080:80"           # 前端管理服务 端口 映射至宿主机 18080
    depends_on:
      - backend
    networks:
      - xiaozhi-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  xiaozhi-network:
    driver: bridge